bool solve(string s){


 

    stack<char>st;


 

    map<char, char> m;


 

    m['[']=']';


 

    m['{'] = '}';


 

    m['(']=')';


 

 


 

    for (int i = 0; i < s.length(); i++) {


 

      if ((s[i] == '{') || (s[i] == '(') || (s[i] == '[')) {


 

        st.push(s[i]);


 

      } 


 

      else {


 

        if (!st.empty()) {


 

          if (m[st.top()] == s[i]) {


 

            st.pop();


 

          } else {


 

            return false;


 

          }


 

        } else {


 

          return false;


 

        }


 

      }


 

    }


 

    if (st.empty()) {


 

      return true;


 

    }

    else{

        return false;

    }


 

}


 

 


 

bool isValidParenthesis(string s)


 

{


 

  return solve(s);


 

}
